#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Christoc.Modules.CraftAdminModule
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="craftin2")]
	public partial class DBConnectionDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertUserPortal(UserPortal instance);
    partial void UpdateUserPortal(UserPortal instance);
    partial void DeleteUserPortal(UserPortal instance);
    partial void Insert_craftin_CraftManCategoriesList(_craftin_CraftManCategoriesList instance);
    partial void Update_craftin_CraftManCategoriesList(_craftin_CraftManCategoriesList instance);
    partial void Delete_craftin_CraftManCategoriesList(_craftin_CraftManCategoriesList instance);
    partial void Insert_craftin_CraftManCategory(_craftin_CraftManCategory instance);
    partial void Update_craftin_CraftManCategory(_craftin_CraftManCategory instance);
    partial void Delete_craftin_CraftManCategory(_craftin_CraftManCategory instance);
    partial void Insert_craftin_CraftManCountryList(_craftin_CraftManCountryList instance);
    partial void Update_craftin_CraftManCountryList(_craftin_CraftManCountryList instance);
    partial void Delete_craftin_CraftManCountryList(_craftin_CraftManCountryList instance);
    partial void Insert_craftin_CraftManRegion(_craftin_CraftManRegion instance);
    partial void Update_craftin_CraftManRegion(_craftin_CraftManRegion instance);
    partial void Delete_craftin_CraftManRegion(_craftin_CraftManRegion instance);
    partial void Insert_craftin_CraftManRegionList(_craftin_CraftManRegionList instance);
    partial void Update_craftin_CraftManRegionList(_craftin_CraftManRegionList instance);
    partial void Delete_craftin_CraftManRegionList(_craftin_CraftManRegionList instance);
    partial void Insert_craftin_CraftManCompanyImage(_craftin_CraftManCompanyImage instance);
    partial void Update_craftin_CraftManCompanyImage(_craftin_CraftManCompanyImage instance);
    partial void Delete_craftin_CraftManCompanyImage(_craftin_CraftManCompanyImage instance);
    partial void Insert_craftin_CraftUser(_craftin_CraftUser instance);
    partial void Update_craftin_CraftUser(_craftin_CraftUser instance);
    partial void Delete_craftin_CraftUser(_craftin_CraftUser instance);
    #endregion
		
		public DBConnectionDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["SiteSqlServer"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DBConnectionDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBConnectionDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBConnectionDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBConnectionDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<UserPortal> UserPortals
		{
			get
			{
				return this.GetTable<UserPortal>();
			}
		}
		
		public System.Data.Linq.Table<_craftin_CraftManCategoriesList> _craftin_CraftManCategoriesLists
		{
			get
			{
				return this.GetTable<_craftin_CraftManCategoriesList>();
			}
		}
		
		public System.Data.Linq.Table<_craftin_CraftManCategory> _craftin_CraftManCategories
		{
			get
			{
				return this.GetTable<_craftin_CraftManCategory>();
			}
		}
		
		public System.Data.Linq.Table<_craftin_CraftManCountryList> _craftin_CraftManCountryLists
		{
			get
			{
				return this.GetTable<_craftin_CraftManCountryList>();
			}
		}
		
		public System.Data.Linq.Table<_craftin_CraftManRegion> _craftin_CraftManRegions
		{
			get
			{
				return this.GetTable<_craftin_CraftManRegion>();
			}
		}
		
		public System.Data.Linq.Table<_craftin_CraftManRegionList> _craftin_CraftManRegionLists
		{
			get
			{
				return this.GetTable<_craftin_CraftManRegionList>();
			}
		}
		
		public System.Data.Linq.Table<_craftin_CraftManCompanyImage> _craftin_CraftManCompanyImages
		{
			get
			{
				return this.GetTable<_craftin_CraftManCompanyImage>();
			}
		}
		
		public System.Data.Linq.Table<_craftin_CraftUser> _craftin_CraftUsers
		{
			get
			{
				return this.GetTable<_craftin_CraftUser>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserID;
		
		private string _Username;
		
		private string _FirstName;
		
		private string _LastName;
		
		private bool _IsSuperUser;
		
		private System.Nullable<int> _AffiliateId;
		
		private string _Email;
		
		private string _DisplayName;
		
		private bool _UpdatePassword;
		
		private string _LastIPAddress;
		
		private bool _IsDeleted;
		
		private System.Nullable<int> _CreatedByUserID;
		
		private System.Nullable<System.DateTime> _CreatedOnDate;
		
		private System.Nullable<int> _LastModifiedByUserID;
		
		private System.Nullable<System.DateTime> _LastModifiedOnDate;
		
		private System.Nullable<System.Guid> _PasswordResetToken;
		
		private System.Nullable<System.DateTime> _PasswordResetExpiration;
		
		private string _LowerEmail;
		
		private EntitySet<UserPortal> _UserPortals;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnIsSuperUserChanging(bool value);
    partial void OnIsSuperUserChanged();
    partial void OnAffiliateIdChanging(System.Nullable<int> value);
    partial void OnAffiliateIdChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    partial void OnUpdatePasswordChanging(bool value);
    partial void OnUpdatePasswordChanged();
    partial void OnLastIPAddressChanging(string value);
    partial void OnLastIPAddressChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnCreatedByUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedByUserIDChanged();
    partial void OnCreatedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedOnDateChanged();
    partial void OnLastModifiedByUserIDChanging(System.Nullable<int> value);
    partial void OnLastModifiedByUserIDChanged();
    partial void OnLastModifiedOnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModifiedOnDateChanged();
    partial void OnPasswordResetTokenChanging(System.Nullable<System.Guid> value);
    partial void OnPasswordResetTokenChanged();
    partial void OnPasswordResetExpirationChanging(System.Nullable<System.DateTime> value);
    partial void OnPasswordResetExpirationChanged();
    partial void OnLowerEmailChanging(string value);
    partial void OnLowerEmailChanged();
    #endregion
		
		public User()
		{
			this._UserPortals = new EntitySet<UserPortal>(new Action<UserPortal>(this.attach_UserPortals), new Action<UserPortal>(this.detach_UserPortals));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsSuperUser", DbType="Bit NOT NULL")]
		public bool IsSuperUser
		{
			get
			{
				return this._IsSuperUser;
			}
			set
			{
				if ((this._IsSuperUser != value))
				{
					this.OnIsSuperUserChanging(value);
					this.SendPropertyChanging();
					this._IsSuperUser = value;
					this.SendPropertyChanged("IsSuperUser");
					this.OnIsSuperUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AffiliateId", DbType="Int")]
		public System.Nullable<int> AffiliateId
		{
			get
			{
				return this._AffiliateId;
			}
			set
			{
				if ((this._AffiliateId != value))
				{
					this.OnAffiliateIdChanging(value);
					this.SendPropertyChanging();
					this._AffiliateId = value;
					this.SendPropertyChanged("AffiliateId");
					this.OnAffiliateIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(256)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this.OnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayName = value;
					this.SendPropertyChanged("DisplayName");
					this.OnDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatePassword", DbType="Bit NOT NULL")]
		public bool UpdatePassword
		{
			get
			{
				return this._UpdatePassword;
			}
			set
			{
				if ((this._UpdatePassword != value))
				{
					this.OnUpdatePasswordChanging(value);
					this.SendPropertyChanging();
					this._UpdatePassword = value;
					this.SendPropertyChanged("UpdatePassword");
					this.OnUpdatePasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastIPAddress", DbType="NVarChar(50)")]
		public string LastIPAddress
		{
			get
			{
				return this._LastIPAddress;
			}
			set
			{
				if ((this._LastIPAddress != value))
				{
					this.OnLastIPAddressChanging(value);
					this.SendPropertyChanging();
					this._LastIPAddress = value;
					this.SendPropertyChanged("LastIPAddress");
					this.OnLastIPAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedByUserID", DbType="Int")]
		public System.Nullable<int> CreatedByUserID
		{
			get
			{
				return this._CreatedByUserID;
			}
			set
			{
				if ((this._CreatedByUserID != value))
				{
					this.OnCreatedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedByUserID = value;
					this.SendPropertyChanged("CreatedByUserID");
					this.OnCreatedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedOnDate
		{
			get
			{
				return this._CreatedOnDate;
			}
			set
			{
				if ((this._CreatedOnDate != value))
				{
					this.OnCreatedOnDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedOnDate = value;
					this.SendPropertyChanged("CreatedOnDate");
					this.OnCreatedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedByUserID", DbType="Int")]
		public System.Nullable<int> LastModifiedByUserID
		{
			get
			{
				return this._LastModifiedByUserID;
			}
			set
			{
				if ((this._LastModifiedByUserID != value))
				{
					this.OnLastModifiedByUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedByUserID = value;
					this.SendPropertyChanged("LastModifiedByUserID");
					this.OnLastModifiedByUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModifiedOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModifiedOnDate
		{
			get
			{
				return this._LastModifiedOnDate;
			}
			set
			{
				if ((this._LastModifiedOnDate != value))
				{
					this.OnLastModifiedOnDateChanging(value);
					this.SendPropertyChanging();
					this._LastModifiedOnDate = value;
					this.SendPropertyChanged("LastModifiedOnDate");
					this.OnLastModifiedOnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordResetToken", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> PasswordResetToken
		{
			get
			{
				return this._PasswordResetToken;
			}
			set
			{
				if ((this._PasswordResetToken != value))
				{
					this.OnPasswordResetTokenChanging(value);
					this.SendPropertyChanging();
					this._PasswordResetToken = value;
					this.SendPropertyChanged("PasswordResetToken");
					this.OnPasswordResetTokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordResetExpiration", DbType="DateTime")]
		public System.Nullable<System.DateTime> PasswordResetExpiration
		{
			get
			{
				return this._PasswordResetExpiration;
			}
			set
			{
				if ((this._PasswordResetExpiration != value))
				{
					this.OnPasswordResetExpirationChanging(value);
					this.SendPropertyChanging();
					this._PasswordResetExpiration = value;
					this.SendPropertyChanged("PasswordResetExpiration");
					this.OnPasswordResetExpirationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LowerEmail", AutoSync=AutoSync.Always, DbType="NVarChar(256)", IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public string LowerEmail
		{
			get
			{
				return this._LowerEmail;
			}
			set
			{
				if ((this._LowerEmail != value))
				{
					this.OnLowerEmailChanging(value);
					this.SendPropertyChanging();
					this._LowerEmail = value;
					this.SendPropertyChanged("LowerEmail");
					this.OnLowerEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserPortal", Storage="_UserPortals", ThisKey="UserID", OtherKey="UserId")]
		public EntitySet<UserPortal> UserPortals
		{
			get
			{
				return this._UserPortals;
			}
			set
			{
				this._UserPortals.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_UserPortals(UserPortal entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_UserPortals(UserPortal entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserPortals")]
	public partial class UserPortal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserId;
		
		private int _PortalId;
		
		private int _UserPortalId;
		
		private System.DateTime _CreatedDate;
		
		private bool _Authorised;
		
		private bool _IsDeleted;
		
		private bool _RefreshRoles;
		
		private string _VanityUrl;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnPortalIdChanging(int value);
    partial void OnPortalIdChanged();
    partial void OnUserPortalIdChanging(int value);
    partial void OnUserPortalIdChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnAuthorisedChanging(bool value);
    partial void OnAuthorisedChanged();
    partial void OnIsDeletedChanging(bool value);
    partial void OnIsDeletedChanged();
    partial void OnRefreshRolesChanging(bool value);
    partial void OnRefreshRolesChanged();
    partial void OnVanityUrlChanging(string value);
    partial void OnVanityUrlChanged();
    #endregion
		
		public UserPortal()
		{
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PortalId
		{
			get
			{
				return this._PortalId;
			}
			set
			{
				if ((this._PortalId != value))
				{
					this.OnPortalIdChanging(value);
					this.SendPropertyChanging();
					this._PortalId = value;
					this.SendPropertyChanged("PortalId");
					this.OnPortalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserPortalId", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int UserPortalId
		{
			get
			{
				return this._UserPortalId;
			}
			set
			{
				if ((this._UserPortalId != value))
				{
					this.OnUserPortalIdChanging(value);
					this.SendPropertyChanging();
					this._UserPortalId = value;
					this.SendPropertyChanged("UserPortalId");
					this.OnUserPortalIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Authorised", DbType="Bit NOT NULL")]
		public bool Authorised
		{
			get
			{
				return this._Authorised;
			}
			set
			{
				if ((this._Authorised != value))
				{
					this.OnAuthorisedChanging(value);
					this.SendPropertyChanging();
					this._Authorised = value;
					this.SendPropertyChanged("Authorised");
					this.OnAuthorisedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit NOT NULL")]
		public bool IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RefreshRoles", DbType="Bit NOT NULL")]
		public bool RefreshRoles
		{
			get
			{
				return this._RefreshRoles;
			}
			set
			{
				if ((this._RefreshRoles != value))
				{
					this.OnRefreshRolesChanging(value);
					this.SendPropertyChanging();
					this._RefreshRoles = value;
					this.SendPropertyChanged("RefreshRoles");
					this.OnRefreshRolesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VanityUrl", DbType="NVarChar(100)")]
		public string VanityUrl
		{
			get
			{
				return this._VanityUrl;
			}
			set
			{
				if ((this._VanityUrl != value))
				{
					this.OnVanityUrlChanging(value);
					this.SendPropertyChanging();
					this._VanityUrl = value;
					this.SendPropertyChanged("VanityUrl");
					this.OnVanityUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_UserPortal", Storage="_User", ThisKey="UserId", OtherKey="UserID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.UserPortals.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.UserPortals.Add(this);
						this._UserId = value.UserID;
					}
					else
					{
						this._UserId = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[_craftin_CraftManCategoriesList]")]
	public partial class _craftin_CraftManCategoriesList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CraftUserID;
		
		private int _CategoryID;
		
		private EntityRef<_craftin_CraftManCategory> @__craftin_CraftManCategory;
		
		private EntityRef<_craftin_CraftUser> @__craftin_CraftUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCraftUserIDChanging(int value);
    partial void OnCraftUserIDChanged();
    partial void OnCategoryIDChanging(int value);
    partial void OnCategoryIDChanged();
    #endregion
		
		public _craftin_CraftManCategoriesList()
		{
			this.@__craftin_CraftManCategory = default(EntityRef<_craftin_CraftManCategory>);
			this.@__craftin_CraftUser = default(EntityRef<_craftin_CraftUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CraftUserID", DbType="Int NOT NULL")]
		public int CraftUserID
		{
			get
			{
				return this._CraftUserID;
			}
			set
			{
				if ((this._CraftUserID != value))
				{
					if (this.@__craftin_CraftUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCraftUserIDChanging(value);
					this.SendPropertyChanging();
					this._CraftUserID = value;
					this.SendPropertyChanged("CraftUserID");
					this.OnCraftUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryID", DbType="Int NOT NULL")]
		public int CategoryID
		{
			get
			{
				return this._CategoryID;
			}
			set
			{
				if ((this._CategoryID != value))
				{
					if (this.@__craftin_CraftManCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._CategoryID = value;
					this.SendPropertyChanged("CategoryID");
					this.OnCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="_craftin_CraftManCategory__craftin_CraftManCategoriesList", Storage="__craftin_CraftManCategory", ThisKey="CategoryID", OtherKey="CategoryID", IsForeignKey=true)]
		public _craftin_CraftManCategory _craftin_CraftManCategory
		{
			get
			{
				return this.@__craftin_CraftManCategory.Entity;
			}
			set
			{
				_craftin_CraftManCategory previousValue = this.@__craftin_CraftManCategory.Entity;
				if (((previousValue != value) 
							|| (this.@__craftin_CraftManCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this.@__craftin_CraftManCategory.Entity = null;
						previousValue._craftin_CraftManCategoriesLists.Remove(this);
					}
					this.@__craftin_CraftManCategory.Entity = value;
					if ((value != null))
					{
						value._craftin_CraftManCategoriesLists.Add(this);
						this._CategoryID = value.CategoryID;
					}
					else
					{
						this._CategoryID = default(int);
					}
					this.SendPropertyChanged("_craftin_CraftManCategory");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="_craftin_CraftUser__craftin_CraftManCategoriesList", Storage="__craftin_CraftUser", ThisKey="CraftUserID", OtherKey="ID", IsForeignKey=true)]
		public _craftin_CraftUser _craftin_CraftUser
		{
			get
			{
				return this.@__craftin_CraftUser.Entity;
			}
			set
			{
				_craftin_CraftUser previousValue = this.@__craftin_CraftUser.Entity;
				if (((previousValue != value) 
							|| (this.@__craftin_CraftUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this.@__craftin_CraftUser.Entity = null;
						previousValue._craftin_CraftManCategoriesLists.Remove(this);
					}
					this.@__craftin_CraftUser.Entity = value;
					if ((value != null))
					{
						value._craftin_CraftManCategoriesLists.Add(this);
						this._CraftUserID = value.ID;
					}
					else
					{
						this._CraftUserID = default(int);
					}
					this.SendPropertyChanged("_craftin_CraftUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[_craftin_CraftManCategory]")]
	public partial class _craftin_CraftManCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CategoryID;
		
		private string _CategoryName;
		
		private string _CategoryDescription;
		
		private System.Data.Linq.Binary _CategoryImage;
		
		private EntitySet<_craftin_CraftManCategoriesList> @__craftin_CraftManCategoriesLists;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCategoryIDChanging(int value);
    partial void OnCategoryIDChanged();
    partial void OnCategoryNameChanging(string value);
    partial void OnCategoryNameChanged();
    partial void OnCategoryDescriptionChanging(string value);
    partial void OnCategoryDescriptionChanged();
    partial void OnCategoryImageChanging(System.Data.Linq.Binary value);
    partial void OnCategoryImageChanged();
    #endregion
		
		public _craftin_CraftManCategory()
		{
			this.@__craftin_CraftManCategoriesLists = new EntitySet<_craftin_CraftManCategoriesList>(new Action<_craftin_CraftManCategoriesList>(this.attach__craftin_CraftManCategoriesLists), new Action<_craftin_CraftManCategoriesList>(this.detach__craftin_CraftManCategoriesLists));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CategoryID
		{
			get
			{
				return this._CategoryID;
			}
			set
			{
				if ((this._CategoryID != value))
				{
					this.OnCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._CategoryID = value;
					this.SendPropertyChanged("CategoryID");
					this.OnCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryName", DbType="VarChar(120) NOT NULL", CanBeNull=false)]
		public string CategoryName
		{
			get
			{
				return this._CategoryName;
			}
			set
			{
				if ((this._CategoryName != value))
				{
					this.OnCategoryNameChanging(value);
					this.SendPropertyChanging();
					this._CategoryName = value;
					this.SendPropertyChanged("CategoryName");
					this.OnCategoryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryDescription", DbType="VarChar(3000)")]
		public string CategoryDescription
		{
			get
			{
				return this._CategoryDescription;
			}
			set
			{
				if ((this._CategoryDescription != value))
				{
					this.OnCategoryDescriptionChanging(value);
					this.SendPropertyChanging();
					this._CategoryDescription = value;
					this.SendPropertyChanged("CategoryDescription");
					this.OnCategoryDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryImage", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary CategoryImage
		{
			get
			{
				return this._CategoryImage;
			}
			set
			{
				if ((this._CategoryImage != value))
				{
					this.OnCategoryImageChanging(value);
					this.SendPropertyChanging();
					this._CategoryImage = value;
					this.SendPropertyChanged("CategoryImage");
					this.OnCategoryImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="_craftin_CraftManCategory__craftin_CraftManCategoriesList", Storage="__craftin_CraftManCategoriesLists", ThisKey="CategoryID", OtherKey="CategoryID")]
		public EntitySet<_craftin_CraftManCategoriesList> _craftin_CraftManCategoriesLists
		{
			get
			{
				return this.@__craftin_CraftManCategoriesLists;
			}
			set
			{
				this.@__craftin_CraftManCategoriesLists.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach__craftin_CraftManCategoriesLists(_craftin_CraftManCategoriesList entity)
		{
			this.SendPropertyChanging();
			entity._craftin_CraftManCategory = this;
		}
		
		private void detach__craftin_CraftManCategoriesLists(_craftin_CraftManCategoriesList entity)
		{
			this.SendPropertyChanging();
			entity._craftin_CraftManCategory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[_craftin_CraftManCountryList]")]
	public partial class _craftin_CraftManCountryList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CountryID;
		
		private string _CountryName;
		
		private EntitySet<_craftin_CraftUser> @__craftin_CraftUsers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCountryIDChanging(int value);
    partial void OnCountryIDChanged();
    partial void OnCountryNameChanging(string value);
    partial void OnCountryNameChanged();
    #endregion
		
		public _craftin_CraftManCountryList()
		{
			this.@__craftin_CraftUsers = new EntitySet<_craftin_CraftUser>(new Action<_craftin_CraftUser>(this.attach__craftin_CraftUsers), new Action<_craftin_CraftUser>(this.detach__craftin_CraftUsers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CountryID
		{
			get
			{
				return this._CountryID;
			}
			set
			{
				if ((this._CountryID != value))
				{
					this.OnCountryIDChanging(value);
					this.SendPropertyChanging();
					this._CountryID = value;
					this.SendPropertyChanged("CountryID");
					this.OnCountryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryName", DbType="VarChar(120) NOT NULL", CanBeNull=false)]
		public string CountryName
		{
			get
			{
				return this._CountryName;
			}
			set
			{
				if ((this._CountryName != value))
				{
					this.OnCountryNameChanging(value);
					this.SendPropertyChanging();
					this._CountryName = value;
					this.SendPropertyChanged("CountryName");
					this.OnCountryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="_craftin_CraftManCountryList__craftin_CraftUser", Storage="__craftin_CraftUsers", ThisKey="CountryID", OtherKey="CountryID")]
		public EntitySet<_craftin_CraftUser> _craftin_CraftUsers
		{
			get
			{
				return this.@__craftin_CraftUsers;
			}
			set
			{
				this.@__craftin_CraftUsers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach__craftin_CraftUsers(_craftin_CraftUser entity)
		{
			this.SendPropertyChanging();
			entity._craftin_CraftManCountryList = this;
		}
		
		private void detach__craftin_CraftUsers(_craftin_CraftUser entity)
		{
			this.SendPropertyChanging();
			entity._craftin_CraftManCountryList = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[_craftin_CraftManRegion]")]
	public partial class _craftin_CraftManRegion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _RegionName;
		
		private string _RegionDescription;
		
		private System.Data.Linq.Binary _RegionImage;
		
		private int _RegionCountryID;
		
		private EntitySet<_craftin_CraftManRegionList> @__craftin_CraftManRegionLists;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnRegionNameChanging(string value);
    partial void OnRegionNameChanged();
    partial void OnRegionDescriptionChanging(string value);
    partial void OnRegionDescriptionChanged();
    partial void OnRegionImageChanging(System.Data.Linq.Binary value);
    partial void OnRegionImageChanged();
    partial void OnRegionCountryIDChanging(int value);
    partial void OnRegionCountryIDChanged();
    #endregion
		
		public _craftin_CraftManRegion()
		{
			this.@__craftin_CraftManRegionLists = new EntitySet<_craftin_CraftManRegionList>(new Action<_craftin_CraftManRegionList>(this.attach__craftin_CraftManRegionLists), new Action<_craftin_CraftManRegionList>(this.detach__craftin_CraftManRegionLists));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionName", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string RegionName
		{
			get
			{
				return this._RegionName;
			}
			set
			{
				if ((this._RegionName != value))
				{
					this.OnRegionNameChanging(value);
					this.SendPropertyChanging();
					this._RegionName = value;
					this.SendPropertyChanged("RegionName");
					this.OnRegionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionDescription", DbType="VarChar(2000)")]
		public string RegionDescription
		{
			get
			{
				return this._RegionDescription;
			}
			set
			{
				if ((this._RegionDescription != value))
				{
					this.OnRegionDescriptionChanging(value);
					this.SendPropertyChanging();
					this._RegionDescription = value;
					this.SendPropertyChanged("RegionDescription");
					this.OnRegionDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionImage", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary RegionImage
		{
			get
			{
				return this._RegionImage;
			}
			set
			{
				if ((this._RegionImage != value))
				{
					this.OnRegionImageChanging(value);
					this.SendPropertyChanging();
					this._RegionImage = value;
					this.SendPropertyChanged("RegionImage");
					this.OnRegionImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionCountryID", DbType="Int NOT NULL")]
		public int RegionCountryID
		{
			get
			{
				return this._RegionCountryID;
			}
			set
			{
				if ((this._RegionCountryID != value))
				{
					this.OnRegionCountryIDChanging(value);
					this.SendPropertyChanging();
					this._RegionCountryID = value;
					this.SendPropertyChanged("RegionCountryID");
					this.OnRegionCountryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="_craftin_CraftManRegion__craftin_CraftManRegionList", Storage="__craftin_CraftManRegionLists", ThisKey="ID", OtherKey="RegionID")]
		public EntitySet<_craftin_CraftManRegionList> _craftin_CraftManRegionLists
		{
			get
			{
				return this.@__craftin_CraftManRegionLists;
			}
			set
			{
				this.@__craftin_CraftManRegionLists.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach__craftin_CraftManRegionLists(_craftin_CraftManRegionList entity)
		{
			this.SendPropertyChanging();
			entity._craftin_CraftManRegion = this;
		}
		
		private void detach__craftin_CraftManRegionLists(_craftin_CraftManRegionList entity)
		{
			this.SendPropertyChanging();
			entity._craftin_CraftManRegion = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[_craftin_CraftManRegionList]")]
	public partial class _craftin_CraftManRegionList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _RegionID;
		
		private int _CraftUserID;
		
		private EntityRef<_craftin_CraftManRegion> @__craftin_CraftManRegion;
		
		private EntityRef<_craftin_CraftUser> @__craftin_CraftUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnRegionIDChanging(int value);
    partial void OnRegionIDChanged();
    partial void OnCraftUserIDChanging(int value);
    partial void OnCraftUserIDChanged();
    #endregion
		
		public _craftin_CraftManRegionList()
		{
			this.@__craftin_CraftManRegion = default(EntityRef<_craftin_CraftManRegion>);
			this.@__craftin_CraftUser = default(EntityRef<_craftin_CraftUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegionID", DbType="Int NOT NULL")]
		public int RegionID
		{
			get
			{
				return this._RegionID;
			}
			set
			{
				if ((this._RegionID != value))
				{
					if (this.@__craftin_CraftManRegion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRegionIDChanging(value);
					this.SendPropertyChanging();
					this._RegionID = value;
					this.SendPropertyChanged("RegionID");
					this.OnRegionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CraftUserID", DbType="Int NOT NULL")]
		public int CraftUserID
		{
			get
			{
				return this._CraftUserID;
			}
			set
			{
				if ((this._CraftUserID != value))
				{
					if (this.@__craftin_CraftUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCraftUserIDChanging(value);
					this.SendPropertyChanging();
					this._CraftUserID = value;
					this.SendPropertyChanged("CraftUserID");
					this.OnCraftUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="_craftin_CraftManRegion__craftin_CraftManRegionList", Storage="__craftin_CraftManRegion", ThisKey="RegionID", OtherKey="ID", IsForeignKey=true)]
		public _craftin_CraftManRegion _craftin_CraftManRegion
		{
			get
			{
				return this.@__craftin_CraftManRegion.Entity;
			}
			set
			{
				_craftin_CraftManRegion previousValue = this.@__craftin_CraftManRegion.Entity;
				if (((previousValue != value) 
							|| (this.@__craftin_CraftManRegion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this.@__craftin_CraftManRegion.Entity = null;
						previousValue._craftin_CraftManRegionLists.Remove(this);
					}
					this.@__craftin_CraftManRegion.Entity = value;
					if ((value != null))
					{
						value._craftin_CraftManRegionLists.Add(this);
						this._RegionID = value.ID;
					}
					else
					{
						this._RegionID = default(int);
					}
					this.SendPropertyChanged("_craftin_CraftManRegion");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="_craftin_CraftUser__craftin_CraftManRegionList", Storage="__craftin_CraftUser", ThisKey="CraftUserID", OtherKey="ID", IsForeignKey=true)]
		public _craftin_CraftUser _craftin_CraftUser
		{
			get
			{
				return this.@__craftin_CraftUser.Entity;
			}
			set
			{
				_craftin_CraftUser previousValue = this.@__craftin_CraftUser.Entity;
				if (((previousValue != value) 
							|| (this.@__craftin_CraftUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this.@__craftin_CraftUser.Entity = null;
						previousValue._craftin_CraftManRegionLists.Remove(this);
					}
					this.@__craftin_CraftUser.Entity = value;
					if ((value != null))
					{
						value._craftin_CraftManRegionLists.Add(this);
						this._CraftUserID = value.ID;
					}
					else
					{
						this._CraftUserID = default(int);
					}
					this.SendPropertyChanged("_craftin_CraftUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[_craftin_CraftManCompanyImages]")]
	public partial class _craftin_CraftManCompanyImage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _CraftUserID;
		
		private string _Image;
		
		private EntityRef<_craftin_CraftUser> @__craftin_CraftUser;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCraftUserIDChanging(int value);
    partial void OnCraftUserIDChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    #endregion
		
		public _craftin_CraftManCompanyImage()
		{
			this.@__craftin_CraftUser = default(EntityRef<_craftin_CraftUser>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CraftUserID", DbType="Int NOT NULL")]
		public int CraftUserID
		{
			get
			{
				return this._CraftUserID;
			}
			set
			{
				if ((this._CraftUserID != value))
				{
					if (this.@__craftin_CraftUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCraftUserIDChanging(value);
					this.SendPropertyChanging();
					this._CraftUserID = value;
					this.SendPropertyChanged("CraftUserID");
					this.OnCraftUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
		public string Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="_craftin_CraftUser__craftin_CraftManCompanyImage", Storage="__craftin_CraftUser", ThisKey="CraftUserID", OtherKey="ID", IsForeignKey=true)]
		public _craftin_CraftUser _craftin_CraftUser
		{
			get
			{
				return this.@__craftin_CraftUser.Entity;
			}
			set
			{
				_craftin_CraftUser previousValue = this.@__craftin_CraftUser.Entity;
				if (((previousValue != value) 
							|| (this.@__craftin_CraftUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this.@__craftin_CraftUser.Entity = null;
						previousValue._craftin_CraftManCompanyImages.Remove(this);
					}
					this.@__craftin_CraftUser.Entity = value;
					if ((value != null))
					{
						value._craftin_CraftManCompanyImages.Add(this);
						this._CraftUserID = value.ID;
					}
					else
					{
						this._CraftUserID = default(int);
					}
					this.SendPropertyChanged("_craftin_CraftUser");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[_craftin_CraftUser]")]
	public partial class _craftin_CraftUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Username;
		
		private string _Email;
		
		private string _Password;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _DisplayName;
		
		private string _Company;
		
		private string _VatID;
		
		private string _Description;
		
		private string _Address;
		
		private int _CountryID;
		
		private string _City;
		
		private string _ZipCode;
		
		private string _Phone;
		
		private string _CompanyEmail;
		
		private System.Nullable<System.DateTime> _CreationDate;
		
		private int _PortalID;
		
		private string _PortalName;
		
		private string _PortalAlias;
		
		private System.Nullable<int> _OwnerID;
		
		private string _DefaultLang;
		
		private System.Nullable<System.DateTime> _DateInsert;
		
		private System.Nullable<System.DateTime> _DateUpdate;
		
		private string _UserInsert;
		
		private string _UserUpdate;
		
		private int _DNNUserID;
		
		private string _CompanyMainImage;
		
		private EntitySet<_craftin_CraftManCategoriesList> @__craftin_CraftManCategoriesLists;
		
		private EntitySet<_craftin_CraftManRegionList> @__craftin_CraftManRegionLists;
		
		private EntitySet<_craftin_CraftManCompanyImage> @__craftin_CraftManCompanyImages;
		
		private EntityRef<_craftin_CraftManCountryList> @__craftin_CraftManCountryList;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnDisplayNameChanging(string value);
    partial void OnDisplayNameChanged();
    partial void OnCompanyChanging(string value);
    partial void OnCompanyChanged();
    partial void OnVatIDChanging(string value);
    partial void OnVatIDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnCountryIDChanging(int value);
    partial void OnCountryIDChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnZipCodeChanging(string value);
    partial void OnZipCodeChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnCompanyEmailChanging(string value);
    partial void OnCompanyEmailChanged();
    partial void OnCreationDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreationDateChanged();
    partial void OnPortalIDChanging(int value);
    partial void OnPortalIDChanged();
    partial void OnPortalNameChanging(string value);
    partial void OnPortalNameChanged();
    partial void OnPortalAliasChanging(string value);
    partial void OnPortalAliasChanged();
    partial void OnOwnerIDChanging(System.Nullable<int> value);
    partial void OnOwnerIDChanged();
    partial void OnDefaultLangChanging(string value);
    partial void OnDefaultLangChanged();
    partial void OnDateInsertChanging(System.Nullable<System.DateTime> value);
    partial void OnDateInsertChanged();
    partial void OnDateUpdateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateUpdateChanged();
    partial void OnUserInsertChanging(string value);
    partial void OnUserInsertChanged();
    partial void OnUserUpdateChanging(string value);
    partial void OnUserUpdateChanged();
    partial void OnDNNUserIDChanging(int value);
    partial void OnDNNUserIDChanged();
    partial void OnCompanyMainImageChanging(string value);
    partial void OnCompanyMainImageChanged();
    #endregion
		
		public _craftin_CraftUser()
		{
			this.@__craftin_CraftManCategoriesLists = new EntitySet<_craftin_CraftManCategoriesList>(new Action<_craftin_CraftManCategoriesList>(this.attach__craftin_CraftManCategoriesLists), new Action<_craftin_CraftManCategoriesList>(this.detach__craftin_CraftManCategoriesLists));
			this.@__craftin_CraftManRegionLists = new EntitySet<_craftin_CraftManRegionList>(new Action<_craftin_CraftManRegionList>(this.attach__craftin_CraftManRegionLists), new Action<_craftin_CraftManRegionList>(this.detach__craftin_CraftManRegionLists));
			this.@__craftin_CraftManCompanyImages = new EntitySet<_craftin_CraftManCompanyImage>(new Action<_craftin_CraftManCompanyImage>(this.attach__craftin_CraftManCompanyImages), new Action<_craftin_CraftManCompanyImage>(this.detach__craftin_CraftManCompanyImages));
			this.@__craftin_CraftManCountryList = default(EntityRef<_craftin_CraftManCountryList>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(120) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(120) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(120) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(120) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(120) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayName", DbType="VarChar(120) NOT NULL", CanBeNull=false)]
		public string DisplayName
		{
			get
			{
				return this._DisplayName;
			}
			set
			{
				if ((this._DisplayName != value))
				{
					this.OnDisplayNameChanging(value);
					this.SendPropertyChanging();
					this._DisplayName = value;
					this.SendPropertyChanged("DisplayName");
					this.OnDisplayNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company", DbType="VarChar(120)")]
		public string Company
		{
			get
			{
				return this._Company;
			}
			set
			{
				if ((this._Company != value))
				{
					this.OnCompanyChanging(value);
					this.SendPropertyChanging();
					this._Company = value;
					this.SendPropertyChanged("Company");
					this.OnCompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VatID", DbType="VarChar(50)")]
		public string VatID
		{
			get
			{
				return this._VatID;
			}
			set
			{
				if ((this._VatID != value))
				{
					this.OnVatIDChanging(value);
					this.SendPropertyChanging();
					this._VatID = value;
					this.SendPropertyChanged("VatID");
					this.OnVatIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(250)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CountryID", DbType="Int NOT NULL")]
		public int CountryID
		{
			get
			{
				return this._CountryID;
			}
			set
			{
				if ((this._CountryID != value))
				{
					if (this.@__craftin_CraftManCountryList.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCountryIDChanging(value);
					this.SendPropertyChanging();
					this._CountryID = value;
					this.SendPropertyChanged("CountryID");
					this.OnCountryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(200)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZipCode", DbType="VarChar(50)")]
		public string ZipCode
		{
			get
			{
				return this._ZipCode;
			}
			set
			{
				if ((this._ZipCode != value))
				{
					this.OnZipCodeChanging(value);
					this.SendPropertyChanging();
					this._ZipCode = value;
					this.SendPropertyChanged("ZipCode");
					this.OnZipCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(120)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyEmail", DbType="VarChar(120)")]
		public string CompanyEmail
		{
			get
			{
				return this._CompanyEmail;
			}
			set
			{
				if ((this._CompanyEmail != value))
				{
					this.OnCompanyEmailChanging(value);
					this.SendPropertyChanging();
					this._CompanyEmail = value;
					this.SendPropertyChanged("CompanyEmail");
					this.OnCompanyEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalID", DbType="Int NOT NULL")]
		public int PortalID
		{
			get
			{
				return this._PortalID;
			}
			set
			{
				if ((this._PortalID != value))
				{
					this.OnPortalIDChanging(value);
					this.SendPropertyChanging();
					this._PortalID = value;
					this.SendPropertyChanged("PortalID");
					this.OnPortalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalName", DbType="VarChar(250)")]
		public string PortalName
		{
			get
			{
				return this._PortalName;
			}
			set
			{
				if ((this._PortalName != value))
				{
					this.OnPortalNameChanging(value);
					this.SendPropertyChanging();
					this._PortalName = value;
					this.SendPropertyChanged("PortalName");
					this.OnPortalNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PortalAlias", DbType="VarChar(250)")]
		public string PortalAlias
		{
			get
			{
				return this._PortalAlias;
			}
			set
			{
				if ((this._PortalAlias != value))
				{
					this.OnPortalAliasChanging(value);
					this.SendPropertyChanging();
					this._PortalAlias = value;
					this.SendPropertyChanged("PortalAlias");
					this.OnPortalAliasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerID", DbType="Int")]
		public System.Nullable<int> OwnerID
		{
			get
			{
				return this._OwnerID;
			}
			set
			{
				if ((this._OwnerID != value))
				{
					this.OnOwnerIDChanging(value);
					this.SendPropertyChanging();
					this._OwnerID = value;
					this.SendPropertyChanged("OwnerID");
					this.OnOwnerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultLang", DbType="NChar(10)")]
		public string DefaultLang
		{
			get
			{
				return this._DefaultLang;
			}
			set
			{
				if ((this._DefaultLang != value))
				{
					this.OnDefaultLangChanging(value);
					this.SendPropertyChanging();
					this._DefaultLang = value;
					this.SendPropertyChanged("DefaultLang");
					this.OnDefaultLangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateInsert", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateInsert
		{
			get
			{
				return this._DateInsert;
			}
			set
			{
				if ((this._DateInsert != value))
				{
					this.OnDateInsertChanging(value);
					this.SendPropertyChanging();
					this._DateInsert = value;
					this.SendPropertyChanged("DateInsert");
					this.OnDateInsertChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateUpdate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateUpdate
		{
			get
			{
				return this._DateUpdate;
			}
			set
			{
				if ((this._DateUpdate != value))
				{
					this.OnDateUpdateChanging(value);
					this.SendPropertyChanging();
					this._DateUpdate = value;
					this.SendPropertyChanged("DateUpdate");
					this.OnDateUpdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserInsert", DbType="VarChar(120)")]
		public string UserInsert
		{
			get
			{
				return this._UserInsert;
			}
			set
			{
				if ((this._UserInsert != value))
				{
					this.OnUserInsertChanging(value);
					this.SendPropertyChanging();
					this._UserInsert = value;
					this.SendPropertyChanged("UserInsert");
					this.OnUserInsertChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserUpdate", DbType="VarChar(120)")]
		public string UserUpdate
		{
			get
			{
				return this._UserUpdate;
			}
			set
			{
				if ((this._UserUpdate != value))
				{
					this.OnUserUpdateChanging(value);
					this.SendPropertyChanging();
					this._UserUpdate = value;
					this.SendPropertyChanged("UserUpdate");
					this.OnUserUpdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DNNUserID", DbType="Int NOT NULL")]
		public int DNNUserID
		{
			get
			{
				return this._DNNUserID;
			}
			set
			{
				if ((this._DNNUserID != value))
				{
					this.OnDNNUserIDChanging(value);
					this.SendPropertyChanging();
					this._DNNUserID = value;
					this.SendPropertyChanged("DNNUserID");
					this.OnDNNUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyMainImage", DbType="VarChar(500)")]
		public string CompanyMainImage
		{
			get
			{
				return this._CompanyMainImage;
			}
			set
			{
				if ((this._CompanyMainImage != value))
				{
					this.OnCompanyMainImageChanging(value);
					this.SendPropertyChanging();
					this._CompanyMainImage = value;
					this.SendPropertyChanged("CompanyMainImage");
					this.OnCompanyMainImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="_craftin_CraftUser__craftin_CraftManCategoriesList", Storage="__craftin_CraftManCategoriesLists", ThisKey="ID", OtherKey="CraftUserID")]
		public EntitySet<_craftin_CraftManCategoriesList> _craftin_CraftManCategoriesLists
		{
			get
			{
				return this.@__craftin_CraftManCategoriesLists;
			}
			set
			{
				this.@__craftin_CraftManCategoriesLists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="_craftin_CraftUser__craftin_CraftManRegionList", Storage="__craftin_CraftManRegionLists", ThisKey="ID", OtherKey="CraftUserID")]
		public EntitySet<_craftin_CraftManRegionList> _craftin_CraftManRegionLists
		{
			get
			{
				return this.@__craftin_CraftManRegionLists;
			}
			set
			{
				this.@__craftin_CraftManRegionLists.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="_craftin_CraftUser__craftin_CraftManCompanyImage", Storage="__craftin_CraftManCompanyImages", ThisKey="ID", OtherKey="CraftUserID")]
		public EntitySet<_craftin_CraftManCompanyImage> _craftin_CraftManCompanyImages
		{
			get
			{
				return this.@__craftin_CraftManCompanyImages;
			}
			set
			{
				this.@__craftin_CraftManCompanyImages.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="_craftin_CraftManCountryList__craftin_CraftUser", Storage="__craftin_CraftManCountryList", ThisKey="CountryID", OtherKey="CountryID", IsForeignKey=true)]
		public _craftin_CraftManCountryList _craftin_CraftManCountryList
		{
			get
			{
				return this.@__craftin_CraftManCountryList.Entity;
			}
			set
			{
				_craftin_CraftManCountryList previousValue = this.@__craftin_CraftManCountryList.Entity;
				if (((previousValue != value) 
							|| (this.@__craftin_CraftManCountryList.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this.@__craftin_CraftManCountryList.Entity = null;
						previousValue._craftin_CraftUsers.Remove(this);
					}
					this.@__craftin_CraftManCountryList.Entity = value;
					if ((value != null))
					{
						value._craftin_CraftUsers.Add(this);
						this._CountryID = value.CountryID;
					}
					else
					{
						this._CountryID = default(int);
					}
					this.SendPropertyChanged("_craftin_CraftManCountryList");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach__craftin_CraftManCategoriesLists(_craftin_CraftManCategoriesList entity)
		{
			this.SendPropertyChanging();
			entity._craftin_CraftUser = this;
		}
		
		private void detach__craftin_CraftManCategoriesLists(_craftin_CraftManCategoriesList entity)
		{
			this.SendPropertyChanging();
			entity._craftin_CraftUser = null;
		}
		
		private void attach__craftin_CraftManRegionLists(_craftin_CraftManRegionList entity)
		{
			this.SendPropertyChanging();
			entity._craftin_CraftUser = this;
		}
		
		private void detach__craftin_CraftManRegionLists(_craftin_CraftManRegionList entity)
		{
			this.SendPropertyChanging();
			entity._craftin_CraftUser = null;
		}
		
		private void attach__craftin_CraftManCompanyImages(_craftin_CraftManCompanyImage entity)
		{
			this.SendPropertyChanging();
			entity._craftin_CraftUser = this;
		}
		
		private void detach__craftin_CraftManCompanyImages(_craftin_CraftManCompanyImage entity)
		{
			this.SendPropertyChanging();
			entity._craftin_CraftUser = null;
		}
	}
}
#pragma warning restore 1591
